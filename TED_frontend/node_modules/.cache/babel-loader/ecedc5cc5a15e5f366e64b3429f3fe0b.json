{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u039C\\u0391\\u03A1\\u0399\\u0391\\\\Documents\\\\React Practice\\\\my-app\\\\src\\\\MemeGenerator.js\";\nimport React from \"react\";\n\nclass MemeGenerator extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randomImg: \"http://i.imgflip.com/1bij.jpg\",\n      allMemeImgs: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\").then(response => response.json()).then(response => {\n      const memes = response.data.memes;\n      this.setState({\n        allMemeImgs: memes\n      });\n    });\n  }\n\n  handleChange(event) {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const randIndex = Math.floor(Math.random() * this.state.allMemeImgs.length) % this.state.allMemeImgs.length;\n    this.setState(prevState => {\n      return {\n        randomImg: prevState.allMemeImgs[randIndex].url\n      };\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"meme-form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"topText\",\n      placeholder: \"Top Text\",\n      value: this.state.topText,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"bottomText\",\n      placeholder: \"Bottom Text\",\n      value: this.state.bottomText,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Gen\")), React.createElement(\"div\", {\n      className: \"meme\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.randomImg,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      className: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.state.topText), React.createElement(\"h2\", {\n      className: \"bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.state.bottomText)));\n  }\n\n}\n\nexport default MemeGenerator;","map":{"version":3,"sources":["C:\\Users\\ΜΑΡΙΑ\\Documents\\React Practice\\my-app\\src\\MemeGenerator.js"],"names":["React","MemeGenerator","Component","constructor","state","topText","bottomText","randomImg","allMemeImgs","handleChange","bind","handleSubmit","componentDidMount","fetch","then","response","json","memes","data","setState","event","target","name","value","preventDefault","randIndex","Math","floor","random","length","prevState","url","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AAC3CC,EAAAA,WAAW,GAAG;AACb;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,OAAO,EAAE,EADG;AAEZC,MAAAA,UAAU,EAAE,EAFA;AAGZC,MAAAA,SAAS,EAAE,+BAHC;AAIZC,MAAAA,WAAW,EAAE;AAJD,KAAb;AAOA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA;;AAEDE,EAAAA,iBAAiB,GAAG;AACnBC,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACEC,IADF,CACOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADnB,EAEEF,IAFF,CAEOC,QAAQ,IAAI;AAAA,YACVE,KADU,GACDF,QAAQ,CAACG,IADR,CACVD,KADU;AAEjB,WAAKE,QAAL,CAAc;AAAEX,QAAAA,WAAW,EAAES;AAAf,OAAd;AACA,KALF;AAOA;;AAEDR,EAAAA,YAAY,CAACW,KAAD,EAAQ;AAAA,0BACGA,KAAK,CAACC,MADT;AAAA,UACZC,IADY,iBACZA,IADY;AAAA,UACNC,KADM,iBACNA,KADM;AAEnB,SAAKJ,QAAL,CAAc;AAAE,OAACG,IAAD,GAAQC;AAAV,KAAd;AACA;;AAEDZ,EAAAA,YAAY,CAACS,KAAD,EAAQ;AACnBA,IAAAA,KAAK,CAACI,cAAN;AACA,UAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgB,KAAKxB,KAAL,CAAWI,WAAX,CAAuBqB,MAAnD,IAA8D,KAAKzB,KAAL,CAAWI,WAAX,CAAuBqB,MAAvG;AACA,SAAKV,QAAL,CAAeW,SAAS,IAAI;AAC3B,aAAQ;AACPvB,QAAAA,SAAS,EAAEuB,SAAS,CAACtB,WAAV,CAAsBiB,SAAtB,EAAiCM;AADrC,OAAR;AAGA,KAJD;AAKA;;AAEDC,EAAAA,MAAM,GAAG;AACR,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAM,MAAA,SAAS,EAAC,WAAhB;AAA4B,MAAA,QAAQ,EAAE,KAAKrB,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AACC,MAAA,IAAI,EAAC,MADN;AAEC,MAAA,IAAI,EAAC,SAFN;AAGC,MAAA,WAAW,EAAC,UAHb;AAIC,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,OAJnB;AAKC,MAAA,QAAQ,EAAE,KAAKI,YALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAQC;AACC,MAAA,IAAI,EAAC,MADN;AAEC,MAAA,IAAI,EAAC,YAFN;AAGC,MAAA,WAAW,EAAC,aAHb;AAIC,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWE,UAJnB;AAKC,MAAA,QAAQ,EAAE,KAAKG,YALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARD,EAgBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhBD,CADD,EAoBC;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,GAAG,EAAE,KAAKL,KAAL,CAAWG,SAArB;AAAgC,MAAA,GAAG,EAAC,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC;AAAI,MAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqB,KAAKH,KAAL,CAAWC,OAAhC,CAFD,EAGC;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwB,KAAKD,KAAL,CAAWE,UAAnC,CAHD,CApBD,CADD;AA4BA;;AApE0C;;AAyE5C,eAAeL,aAAf","sourcesContent":["import React from \"react\"\r\n\r\n\r\nclass MemeGenerator extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\ttopText: \"\",\r\n\t\t\tbottomText: \"\",\r\n\t\t\trandomImg: \"http://i.imgflip.com/1bij.jpg\",\r\n\t\t\tallMemeImgs: []\r\n\t\t}\r\n\r\n\t\tthis.handleChange = this.handleChange.bind(this)\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this)\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch(\"https://api.imgflip.com/get_memes\")\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(response => {\r\n\t\t\t\tconst {memes} = response.data\r\n\t\t\t\tthis.setState({ allMemeImgs: memes})\r\n\t\t\t})\r\n\r\n\t}\r\n\r\n\thandleChange(event) {\r\n\t\tconst {name, value} = event.target\r\n\t\tthis.setState({ [name]: value} )\r\n\t}\r\n\r\n\thandleSubmit(event) {\r\n\t\tevent.preventDefault()\r\n\t\tconst randIndex = Math.floor((Math.random() * this.state.allMemeImgs.length)) % this.state.allMemeImgs.length\r\n\t\tthis.setState( prevState => {\r\n\t\t\treturn ({\r\n\t\t\t\trandomImg: prevState.allMemeImgs[randIndex].url\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<form className=\"meme-form\" onSubmit={this.handleSubmit} >\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"topText\"\r\n\t\t\t\t\t\tplaceholder=\"Top Text\"\r\n\t\t\t\t\t\tvalue={this.state.topText}\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"bottomText\"\r\n\t\t\t\t\t\tplaceholder=\"Bottom Text\"\r\n\t\t\t\t\t\tvalue={this.state.bottomText}\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<button>Gen</button>\r\n\t\t\t\t</form>\r\n\r\n\t\t\t\t<div className=\"meme\">\r\n\t\t\t\t\t<img src={this.state.randomImg} alt=\"\" />\r\n\t\t\t\t\t<h2 className=\"top\">{this.state.topText}</h2>\r\n\t\t\t\t\t<h2 className=\"bottom\">{this.state.bottomText}</h2>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n}\r\n\r\n\r\nexport default MemeGenerator"]},"metadata":{},"sourceType":"module"}